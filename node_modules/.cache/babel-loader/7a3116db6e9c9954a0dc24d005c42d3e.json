{"ast":null,"code":"var _jsxFileName = \"/Jasmin/project/Event/greenufi/GREENYFi_front/src/pages/Login.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n\n      if (event.target.value) {\n        this.setState({\n          errors: Object.assign(this.state.errors, {\n            [event.target.name]: \"\"\n          })\n        });\n      }\n    };\n\n    this.login = () => {\n      let _this$state = this.state,\n          userName = _this$state.userName,\n          password = _this$state.password,\n          getUsersDetails = _this$state.getUsersDetails;\n\n      if (this.validateForm()) {\n        var chacking = getUsersDetails.filter(user => user.name === userName && user.birth_year === password);\n\n        if (chacking.length != 0) {\n          this.props.history.push('/homePage');\n        } else {\n          toast.error(\"Incorrect credentials\", {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n          });\n        }\n      }\n    };\n\n    this.state = {\n      userName: '',\n      password: '',\n      getEmail: '',\n      getpsw: '',\n      getUsersDetails: [],\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      url: 'https://swapi.co/api/people/',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response && response.status == 200) {\n        this.setState({\n          getUsersDetails: response.data.results\n        });\n      }\n    });\n  }\n\n  validateForm() {\n    let _this$state2 = this.state,\n        password = _this$state2.password,\n        userName = _this$state2.userName,\n        errors = _this$state2.errors;\n    let formIsValid = true;\n\n    if (!userName || userName.trim() === '') {\n      formIsValid = false;\n      errors['userName'] = '* User name required';\n    }\n\n    if (!password || password.trim() === '') {\n      formIsValid = false;\n      errors['password'] = '* Password required';\n    }\n\n    this.setState({\n      errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    let _this$state3 = this.state,\n        userName = _this$state3.userName,\n        password = _this$state3.password,\n        errors = _this$state3.errors;\n    return React.createElement(\"div\", {\n      className: \"modal-content animate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"User Name\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Username\",\n      name: \"userName\",\n      value: userName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"err-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, errors.userName)), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Password\")), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"err-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, errors.password), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.login(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Jasmin/project/Event/greenufi/GREENYFi_front/src/pages/Login.jsx"],"names":["React","Component","axios","toast","configure","Login","constructor","props","handleChange","event","setState","target","name","value","errors","Object","assign","state","login","userName","password","getUsersDetails","validateForm","chacking","filter","user","birth_year","length","history","push","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","getEmail","getpsw","componentDidMount","url","method","headers","then","response","console","log","status","data","results","formIsValid","trim","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            getEmail: '',\r\n            getpsw: '',\r\n            getUsersDetails: [],\r\n            errors: {}\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n        if (event.target.value) {\r\n            this.setState({\r\n                errors: Object.assign(this.state.errors, { [event.target.name]: \"\" })\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            url: 'https://swapi.co/api/people/',\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(response);\r\n\r\n                if (response && response.status == 200) {\r\n                    this.setState({ getUsersDetails: response.data.results })\r\n                }\r\n            })\r\n    }\r\n\r\n    login = () => {\r\n        let { userName, password, getUsersDetails } = this.state\r\n        if (this.validateForm()) {\r\n            var chacking = getUsersDetails.filter(user => (user.name === userName && user.birth_year === password));\r\n            if (chacking.length != 0) {\r\n                this.props.history.push('/homePage')\r\n            } else {\r\n                toast.error(\"Incorrect credentials\", { position: \"top-right\", autoClose: 2000, hideProgressBar: true, closeOnClick: true, pauseOnHover: true, draggable: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    validateForm() {\r\n        let { password, userName, errors } = this.state;\r\n        let formIsValid = true\r\n        if (!userName || userName.trim() === '') {\r\n            formIsValid = false\r\n            errors['userName'] = '* User name required'\r\n        }\r\n        if (!password || password.trim() === '') {\r\n            formIsValid = false\r\n            errors['password'] = '* Password required'\r\n        }\r\n        this.setState({ errors })\r\n        return formIsValid\r\n    }\r\n\r\n    render() {\r\n        let { userName, password, errors } = this.state\r\n        return (\r\n            <div className=\"modal-content animate\">\r\n                <div className=\"container\">\r\n                    <label><b>User Name</b></label>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Enter Username\" name=\"userName\" value={userName} onChange={this.handleChange} />\r\n                        <span className='err-msg'>{errors.userName}</span>\r\n                    </div>\r\n                    <label ><b>Password</b></label>\r\n                    <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" value={password} onChange={this.handleChange} />\r\n                    <span className='err-msg'>{errors.password}</span>\r\n\r\n                    <button type=\"button\" onClick={() => this.login()}>Login</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Login "]},"metadata":{},"sourceType":"module"}